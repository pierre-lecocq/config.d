#+TITLE: Debian install and config deployment
#+AUTHOR: Pierre Lecocq
#+EMAIL: pierre.lecocq@gmail.com
#+STARTUP: content

** Prepare

*** Grub timeout

#+begin_src sh
sudo sed -i s/GRUB_TIMEOUT=5/GRUB_TIMEOUT=1/ /etc/default/grub
sudo update-grub
#+end_src

*** Apt

#+begin_src sh
if ! [ -f /etc/apt/sources.list.ori ]; then
    sudo cp /etc/apt/sources.list /etc/apt/sources.list.ori
    sudo sh -c 'dpkg -l > /etc/apt/pkg.list.ori'
fi

sudo sed -e 's/jessie/stretch/ig' -i /etc/apt/sources.list
sudo sed -e 's/ main$/ main contrib non-free/g' -i /etc/apt/sources.list
sudo sh -c 'echo "APT::Install-Recommends \"0\";" > /etc/apt/apt.conf.d/50norecommends'

sudo apt-get update
sudo apt-get dist-upgrade

sudo apt-get autoremove --purge -y exim4-.\* portmap rpcbind cups
#+end_src

** Install

*** Base

Install the base system packages

#+begin_src sh
sudo apt-get install -y aspell \
                        aspell-en \
                        aspell-fr \
                        autoconf \
                        automake \
                        build-essential \
                        clamav \
                        cmake \
                        curl \
                        emacs \
                        fail2ban \
                        gcc \
                        gdb \
                        gettext \
                        git \
                        gnupg \
                        gnupg-agent \
                        gnutls-bin \
                        irb \
                        libncurses5-dev \
                        libruby \
                        linux-headers-$(uname -r|sed 's,[^-]*-[^-]*-,,') \
                        locales \
                        mailutils \
                        manpages-dev \
                        mutt-patched \
                        nmap \
                        offlineimap \
                        p7zip \
                        python \
                        rsync \
                        ruby \
                        ruby-dev \
                        rubygems \
                        sbcl \
                        strace \
                        tcpdump \
                        tree \
                        unrar \
                        unzip \
                        valgrind \
                        wget \
                        yasm \
                        zip
#+end_src

*** Window manager

Install i3wm and some GUI apps

#+begin_src sh
sudo apt-get install -y alsa-oss \
                        alsa-tools \
                        alsa-utils \
                        alsamixergui \
                        arandr \
                        chromium \
                        compton \
                        dunst \
                        feh \
                        firmware-iwlwifi \
                        flashplugin-nonfree \
                        fonts-inconsolata \
                        i3 \
                        i3lock \
                        i3status \
                        libnotify-bin \
                        mirage \
                        notification-daemon \
                        numlockx \
                        orage \
                        rxvt-unicode-256color \
                        scrot \
                        suckless-tools \
                        tango-icon-theme \
                        thunar \
                        transmission-gtk \
                        ttf-bitstream-vera \
                        ttf-dejavu \
                        vlc \
                        xclip \
                        xorg \
                        xpdf

Xorg -configure

echo "exec i3" > $HOME/.xinitrc
#+end_src

*** Pentest

Install some pentest tools

#+begin_src sh
sudo apt-get install -y dsniff \
                        ettercap-text-only \
                        john \
                        netcat \
                        ngrep \
                        nikto \
                        python-beautifulsoup \
                        python-geoip
                        python-libxml2 \
                        python-pycurl \
                        ratproxy \
                        siege \
                        sqlite3 \
                        sqlmap \
                        subversion \
                        tcpdump \
                        tcptrace \
                        w3af

sudo mkdir -p /usr/local/bin

svn co http://www.metasploit.com/svn/framework3/trunk /usr/local/metasploit;
sudo ln -s /usr/local/metasploit/msfconsole /usr/local/bin/msfconsole

svn co https://xsser.svn.sourceforge.net/svnroot/xsser /usr/local/xsser
sudo ln -s /usr/local/xsser/xsser /usr/local/bin/xsser
#+end_src

*** Virtualizers

Install some virtualizers (virtualbox and kvm)

#+begin_src sh
sudo apt-get install -y linux-headers-$(uname -r|sed 's,[^-]*-[^-]*-,,') \
                        virtualbox-ose \
                        virtualbox-ose-dkms

sudo modprobe vboxdrv

sudo apt-get install -y bridge-utils \
                        libvirt-bin \
                        qemu-kvm \
                        virt-manager \
                        virtinst
#+end_src

*** Emacs

Compile Emacs from source and install it

#+begin_src sh
sudo apt-get build-dep -y emacs24
sudo apt-get install -y aspell \
                        aspell-en \
                        aspell-fr \
                        fonts-inconsolata \
                        git \
                        mailutils \
                        texi2html \
                        texify \
                        texinfo \
                        texlive \
                        texlive-base \
                        texlive-generic-recommended \
                        texlive-latex-base \
                        texlive-latex-extra \
                        w3m

git clone --depth=1 git://git.savannah.gnu.org/emacs.git $HOME/emacs.src

cd $HOME/emacs.src && ./autogen.sh && ./configure && make && sudo make install
#+end_src

** Deploy config

*** Prepare directories

Prepare filesystem

#+begin_src sh
mkdir -p $HOME/src
mkdir -p $HOME/.config
#+end_src

*** Clone repositories

Clone wanted repositories

#+begin_src sh
git clone https://github.com/pierre-lecocq/config.d $HOME/src/config.d
git clone https://github.com/pierre-lecocq/emacs.d $HOME/src/emacs.d
git clone https://github.com/pierre-lecocq/mail.d $HOME/src/mail.d
#+end_src

*** Create links

Link config files

#+begin_src sh
mv $HOME/.bashrc $HOME/.bashrc.ori
mv $HOME/.bash_profile $HOME/.bash_profile.ori

ln -s $HOME/src/config.d/dotfiles/Xdefaults $HOME/.Xdefaults
ln -s $HOME/src/config.d/dotfiles/gitconfig $HOME/.gitconfig
ln -s $HOME/src/config.d/dotfiles/gemrc $HOME/.gemrc
ln -s $HOME/src/config.d/dotfiles/bashrc $HOME/.bashrc
ln -s $HOME/src/config.d/dotfiles/bash_profile $HOME/.bash_profile
ln -s $HOME/src/config.d/dotfiles/gtkrc-2.0 $HOME/.gtkrc-2.0
ln -s $HOME/src/config.d/dotfiles/gtk-3.0 $HOME/.gtk-3.0

ln -s $HOME/src/config.d/dotfiles/tint2 $HOME/.config/tint2
ln -s $HOME/src/config.d/dotfiles/i3 $HOME/.config/i3
ln -s $HOME/src/config.d/dotfiles/dunst $HOME/.config/dunst
ln -s $HOME/src/config.d/dotfiles/user-dirs.dirs $HOME/.config/user-dirs.dirs
ln -s $HOME/src/config.d/dotfiles/systemd $HOME/.config/systemd

ln -s $HOME/src/config.d/bin $HOME/bin
chmod 700 $HOME/bin/*

ln -s $HOME/src/config.d/images $HOME/images
#+end_src

*** Startup services

#+begin_src sh
systemctl enable --user emacs
systemctl start --user emacs
#+end_src

** Setup

*** Locales

Set locales (i.e add =fr_FR.UTF-8=)

#+begin_src sh
sudo dpkg-reconfigure locales
#+end_src

*** GnuPG

Add a few options to GPG user's config

#+begin_src sh
echo "cipher-algo AES256" >> $HOME/.gnupg/gpg.conf
echo "use-agent" >> $HOME/.gnupg/gpg.conf
#+end_src

And configure the gpg-agent. Note that the agent is started from the =.bash_profile= file.

#+begin_src sh
echo "default-cache-ttl 14400" >> $HOME/.gnupg/gpg-agent.conf
#+end_src

*** SELinux

*Note:* package =selinux-policy-default= might be unavailable from =jessie= and =stretch=. Download and install it from =sid=.

Install needed packages

#+begin_src sh
sudo apt-get -y install selinux-basics policycoreutils selinux-policy-default auditd
sudo sh -c 'echo "FSCKFIX=yes" >> /etc/default/rcS'
sudo selinux-activate
#+end_src

/Reboot system/

Then check install with:

#+begin_src sh
sudo id -Z
sudo check-selinux-installation
sudo sestatus
#+end_src

*** Password

Install some password related packages

#+begin_src sh
sudo apt-get install -y libpam-cracklib
#+end_src

Then set password policies (1 lowercase char, 1 uppercase char, 1 digit, 1 special char and 4 different char from the previous password) by editing =/etc/pam.d/common-password= with:

#+begin_src sh
password requisite pam_cracklib.so try_first_pass retry=3 minlength=8 lcredit=1 ucredit=1 dcredit=1 ocredit=1 difok=4
#+end_src

Change password 30 days or if account is inactive during 10 days

#+begin_src sh
sudo chage -I 10 -M 30 pierre
#+end_src

*** Cron

As user, execute:

#+begin_src sh
crontab -e
#+end_src

And add these lines:

#+begin_src sh
0,30 *  * * *   HOME=/home/pierre DISPLAY=:0 ruby /home/pierre/bin/wallroll
#+end_src

All user oriented cron commands are stored in =/var/spool/cron/crontabs/<username>=

But for system wide tasks,  edit =/etc/crontab= and add:

#+begin_src sh
0 0  *  * * * root  faillog | mail pierre -s "Login failures report (use faillog -r -u username to unlock)"
0 0  * * Sat  root  chage -l pierre | mail pierre -s "Chage report"
#+end_src

*** Wifi

Prepare

#+begin_src sh
sudo apt-get install firmware-iwlwifi wpasupplicant
sudo chmod 0600 /etc/network/interfaces
#+end_src

List wifi networks

#+begin_src sh
sudo iwlist scan
#+end_src

In =/etc/network/interfaces=, add:

#+begin_src sh
auto wlan0
iface wlan0 inet dhcp
        wireless-mode ad-hoc
        wireless-essid MyESSID
        wireless-key MyPASSWD
        wpa-ssid MyESSID
    	wpa-psk MyPASSWD
#+end_src

Ifup the interface

#+begin_src sh
sudo ifup wlan0
#+end_src
