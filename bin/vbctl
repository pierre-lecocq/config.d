#!/usr/bin/env ruby

# File: vbctl.rb
# Time-stamp: <2015-04-25 12:11:39>
# Copyright (C) 2015 Pierre Lecocq
# Description: VirtualBox controller

require 'thor'
require 'colorize'

# VBCtl main class
class VBCtl < Thor
  # Not a CLI command
  no_commands do
    def run_cmd(cmd)
      `#{cmd}`
    end
  end

  # List existing VM (name state IP)
  desc 'list', 'list VMs'
  def list()
    puts "[*] Listing VMs ...".yellow
    name, status, ip = nil, nil, nil
    output = run_cmd "VBoxManage list vms -l | grep -e '^Name:' -e '^State:'"
    output.split("\n").each_with_index do |line, idx|
      if line =~ /^Name:/
        name = line.gsub /^Name:\s*(\w+)$/, '\1'
      else
        status = line.gsub /^State:\s*(.+)\s\(.*$/, '\1'
      end
      if !name.nil? && !status.nil?
        output2 = run_cmd "VBoxManage guestproperty enumerate #{name} | grep IP"
        ip = output2[/(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})+/]
        puts "    #{name.ljust(20).bold}#{status.ljust(20).colorize(status == 'running' ? :green : :red)}#{ip}"
        name, status, ip = nil, nil, nil
      end
    end
  end

  # Start a VM
  desc 'start NAME', 'start VM NAME'
  def start(name)
    puts "-> Starting VM #{name} ...".bold
    run_cmd "VBoxManage startvm #{name} --type headless"
  end

  # Stop a VM (gracefully)
  desc 'stop NAME', 'stop VM NAME'
  def stop(name)
    puts "-> Stopping VM #{name} ...".bold
    run_cmd "VBoxManage controlvm #{name} savestate"
  end
end

VBCtl.start ARGV
